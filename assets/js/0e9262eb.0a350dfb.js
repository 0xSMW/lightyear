"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4436],{57522:(n,r,e)=>{e.d(r,{Zo:()=>p,kt:()=>m});var t=e(29901);function o(n,r,e){return r in n?Object.defineProperty(n,r,{value:e,enumerable:!0,configurable:!0,writable:!0}):n[r]=e,n}function s(n,r){var e=Object.keys(n);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(n);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(n,r).enumerable}))),e.push.apply(e,t)}return e}function i(n){for(var r=1;r<arguments.length;r++){var e=null!=arguments[r]?arguments[r]:{};r%2?s(Object(e),!0).forEach((function(r){o(n,r,e[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(e)):s(Object(e)).forEach((function(r){Object.defineProperty(n,r,Object.getOwnPropertyDescriptor(e,r))}))}return n}function a(n,r){if(null==n)return{};var e,t,o=function(n,r){if(null==n)return{};var e,t,o={},s=Object.keys(n);for(t=0;t<s.length;t++)e=s[t],r.indexOf(e)>=0||(o[e]=n[e]);return o}(n,r);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(n);for(t=0;t<s.length;t++)e=s[t],r.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(n,e)&&(o[e]=n[e])}return o}var l=t.createContext({}),g=function(n){var r=t.useContext(l),e=r;return n&&(e="function"==typeof n?n(r):i(i({},r),n)),e},p=function(n){var r=g(n.components);return t.createElement(l.Provider,{value:r},n.children)},c={inlineCode:"code",wrapper:function(n){var r=n.children;return t.createElement(t.Fragment,{},r)}},u=t.forwardRef((function(n,r){var e=n.components,o=n.mdxType,s=n.originalType,l=n.parentName,p=a(n,["components","mdxType","originalType","parentName"]),u=g(e),m=o,d=u["".concat(l,".").concat(m)]||u[m]||c[m]||s;return e?t.createElement(d,i(i({ref:r},p),{},{components:e})):t.createElement(d,i({ref:r},p))}));function m(n,r){var e=arguments,o=r&&r.mdxType;if("string"==typeof n||o){var s=e.length,i=new Array(s);i[0]=u;var a={};for(var l in r)hasOwnProperty.call(r,l)&&(a[l]=r[l]);a.originalType=n,a.mdxType="string"==typeof n?n:o,i[1]=a;for(var g=2;g<s;g++)i[g]=e[g];return t.createElement.apply(null,i)}return t.createElement.apply(null,e)}u.displayName="MDXCreateElement"},94957:(n,r,e)=>{e.r(r),e.d(r,{assets:()=>l,contentTitle:()=>i,default:()=>c,frontMatter:()=>s,metadata:()=>a,toc:()=>g});var t=e(14090),o=(e(29901),e(57522));const s={},i=void 0,a={unversionedId:"api/github.commonpayload.repository",id:"api/github.commonpayload.repository",title:"github.commonpayload.repository",description:"Home &gt; @runlightyear/github &gt; CommonPayload &gt; repository",source:"@site/docs/api/github.commonpayload.repository.md",sourceDirName:"api",slug:"/api/github.commonpayload.repository",permalink:"/lightyear/docs/api/github.commonpayload.repository",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/api/github.commonpayload.repository.md",tags:[],version:"current",frontMatter:{}},l={},g=[{value:"CommonPayload.repository property",id:"commonpayloadrepository-property",level:2}],p={toc:g};function c(n){let{components:r,...e}=n;return(0,o.kt)("wrapper",(0,t.Z)({},p,e,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/docs/api"},"Home")," ",">"," ",(0,o.kt)("a",{parentName:"p",href:"/docs/api/github"},"@runlightyear/github")," ",">"," ",(0,o.kt)("a",{parentName:"p",href:"/docs/api/github.commonpayload"},"CommonPayload")," ",">"," ",(0,o.kt)("a",{parentName:"p",href:"/docs/api/github.commonpayload.repository"},"repository")),(0,o.kt)("h2",{id:"commonpayloadrepository-property"},"CommonPayload.repository property"),(0,o.kt)("p",null,"The repository where the event occurred."),(0,o.kt)("b",null,"Signature:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"repository: {\n        id: number;\n        nodeId: string;\n        name: string;\n        fullName: string;\n        private: boolean;\n        owner: {\n            login: string;\n            id: number;\n            nodeId: string;\n            avatarUrl: string;\n            gravatarId: string;\n            url: string;\n            htmlUrl: string;\n            followersUrl: string;\n            followingUrl: string;\n            gistsUrl: string;\n            starredUrl: string;\n            subscriptionsUrl: string;\n            organizationsUrl: string;\n            reposUrl: string;\n            eventsUrl: string;\n            receivedEventsUrl: string;\n            type: string;\n            siteAdmin: boolean;\n        };\n        htmlUrl: string;\n        description: string | null;\n        fork: boolean;\n        url: string;\n        forksUrl: string;\n        keysUrl: string;\n        collaboratorsUrl: string;\n        teamsUrl: string;\n        hooksUrl: string;\n        issueEventsUrl: string;\n        eventsUrl: string;\n        assigneesUrl: string;\n        branchesUrl: string;\n        tagsUrl: string;\n        blobsUrl: string;\n        gitTagsUrl: string;\n        gitRefsUrl: string;\n        treesUrl: string;\n        statusesUrl: string;\n        languagesUrl: string;\n        stargazersUrl: string;\n        contributorsUrl: string;\n        subscribersUrl: string;\n        subscriptionUrl: string;\n        commitsUrl: string;\n        gitCommitsUrl: string;\n        commentsUrl: string;\n        issueCommentUrl: string;\n        contentsUrl: string;\n        compareUrl: string;\n        mergesUrl: string;\n        archiveUrl: string;\n        downloadsUrl: string;\n        issuesUrl: string;\n        pullsUrl: string;\n        milestonesUrl: string;\n        notificationsUrl: string;\n        labelsUrl: string;\n        releasesUrl: string;\n        deploymentsUrl: string;\n        createdAt: string;\n        updatedAt: string;\n        pushedAt: string;\n        gitUrl: string;\n        sshUrl: string;\n        cloneUrl: string;\n        svnUrl: string;\n        homepage: string | null;\n        size: number;\n        stargazersCount: number;\n        watchersCount: number;\n        language: string | null;\n        hasIssues: boolean;\n        hasProjects: boolean;\n        hasDownloads: boolean;\n        hasWiki: boolean;\n        hasPages: boolean;\n        hasDiscussions: boolean;\n        forksCount: number;\n        mirrorUrl: string | null;\n        archived: boolean;\n        disabled: boolean;\n        openIssuesCount: number;\n        license: string | null;\n        allowForking: boolean;\n        isTemplate: boolean;\n        webCommitSignoffRequired: boolean;\n        topics: string[];\n        visibility: string;\n        forks: number;\n        openIssues: number;\n        watchers: number;\n        defaultBranch: string;\n    };\n")))}c.isMDXComponent=!0}}]);