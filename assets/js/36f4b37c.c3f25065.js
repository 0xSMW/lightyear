"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6890],{57522:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>g});var o=r(29901);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,o,i=function(e,t){if(null==e)return{};var r,o,i={},n=Object.keys(e);for(o=0;o<n.length;o++)r=n[o],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(o=0;o<n.length;o++)r=n[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var s=o.createContext({}),c=function(e){var t=o.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},l=function(e){var t=c(e.components);return o.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},y=o.forwardRef((function(e,t){var r=e.components,i=e.mdxType,n=e.originalType,s=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),y=c(r),g=i,f=y["".concat(s,".").concat(g)]||y[g]||u[g]||n;return r?o.createElement(f,a(a({ref:t},l),{},{components:r})):o.createElement(f,a({ref:t},l))}));function g(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var n=r.length,a=new Array(n);a[0]=y;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p.mdxType="string"==typeof e?e:i,a[1]=p;for(var c=2;c<n;c++)a[c]=r[c];return o.createElement.apply(null,a)}return o.createElement.apply(null,r)}y.displayName="MDXCreateElement"},94892:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>u,frontMatter:()=>n,metadata:()=>p,toc:()=>c});var o=r(14090),i=(r(29901),r(57522));const n={},a=void 0,p={unversionedId:"api/github.listorganizationrepositoriesprops.type",id:"api/github.listorganizationrepositoriesprops.type",title:"github.listorganizationrepositoriesprops.type",description:"Home &gt; @runlightyear/github &gt; ListOrganizationRepositoriesProps &gt; type",source:"@site/docs/api/github.listorganizationrepositoriesprops.type.md",sourceDirName:"api",slug:"/api/github.listorganizationrepositoriesprops.type",permalink:"/lightyear/docs/api/github.listorganizationrepositoriesprops.type",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/api/github.listorganizationrepositoriesprops.type.md",tags:[],version:"current",frontMatter:{}},s={},c=[{value:"ListOrganizationRepositoriesProps.type property",id:"listorganizationrepositoriespropstype-property",level:2}],l={toc:c};function u(e){let{components:t,...r}=e;return(0,i.kt)("wrapper",(0,o.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/api"},"Home")," ",">"," ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/github"},"@runlightyear/github")," ",">"," ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/github.listorganizationrepositoriesprops"},"ListOrganizationRepositoriesProps")," ",">"," ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/github.listorganizationrepositoriesprops.type"},"type")),(0,i.kt)("h2",{id:"listorganizationrepositoriespropstype-property"},"ListOrganizationRepositoriesProps.type property"),(0,i.kt)("p",null,"Specifies the types of repositories you want returned. If your organization is associated with an enterprise account using GitHub Enterprise Cloud or GitHub Enterprise Server 2.20+, type can also be internal. However, the internal value is not yet supported when a GitHub App calls this API with an installation access token."),(0,i.kt)("b",null,"Signature:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},'type?: "all" | "public" | "private" | "forks" | "sources" | "member" | "internal";\n')))}u.isMDXComponent=!0}}]);